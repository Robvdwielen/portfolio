library(readxl)
library(tidyverse)
library(olsrr)
library(moments)
netflix_data_complete <- read.csv("C:/Users/Systeembeheer/OneDrive - Tilburg University/Documenten/Master/Marketing Analytics/Thesis/ThesisRob/ThesisRob/Datasets/Cleaned_data/netflix_data_complete.csv", na.strings=c("", "NA"))
#remove column "X"
netflix_data_complete <- netflix_data_complete %>%
select(!X)
summary(netflix_data_complete)
lmNetflix_2 = lm(cumulative_rank ~
AVG_Nmpaa_comp +
AVG_Ngenre_comp +
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated, data = netflix_data_complete) #Create the linear regression
summary(lmNetflix_2) #Review the results
# Specify the weight vector
lmNetflix_log_2 = lm(log(cumulative_rank) ~
AVG_Nmpaa_comp*Holiday_distance+
AVG_Ngenre_comp*Holiday_distance +
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_PG13_Parents_strongly_cautioned +
mpaa_NC17_Adults_only+
mpaa_Not_Rated, data = netflix_data_complete) #Create the linear regression
summary(lmNetflix_log_2) #Review the results
pdf("plots/linearityModel_2.pdf")
plot(lmNetflix_2)
# Close the pdf file
dev.off()
pdf("plots/linearityModel_log_2.pdf")
plot(lmNetflix_log_2)
# Close the pdf file
dev.off()
res2  <- resid(lmNetflix_log_2)
skewness(res2)
library(car)
VIF_scores <- as.data.frame(vif(lmNetflix_log_2))
VIF_scores
write.csv(VIF_scores, "VIF_scores.csv")
res <- cor(netflix_data_complete[c(3:24)])
correlation_table <- as.data.frame(round(res, 2))
write.csv(correlation_table, "correlation_table.csv")
# Specify the weight vector
lmNetflix_log_2 = lm(log(cumulative_rank) ~
AVG_Nmpaa_comp*Holiday_distance+
AVG_Ngenre_comp*Holiday_distance +
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated, data = netflix_data_complete) #Create the linear regression
summary(lmNetflix_log_2) #Review the results
pdf("plots/outliers_plot1.pdf")
sr0 <- rstudent(lmNetflix_log_2)
plot(sr0)
dev.off()
findBiggest <- function(x, n)
as.numeric(names(sort(abs(x), decreasing = TRUE)[1 : n]))
badSr <- findBiggest(sr0, 1)
badSr
pdf("plots/outliers_plot2.pdf")
ols_plot_resid_stud(lmNetflix_log_2)
pdf("plots/high_leverag1.pdf")
lv0 <- hatvalues(lmNetflix_log_2)
lv0 <- hatvalues(lmNetflix_log_2)
# Plot the high leverage points using cut-off (p+1)/n
sample_size <- nrow(netflix_data_complete)
plot(lv0, pch=".", cex=2, main="High leverage points")
text(x=1:length(lv0)+1, y=lv0, labels=ifelse(lv0>(length(coef(lmNetflix_log_2))+1)/sample_size, names(lv0),""), col="red")
dev.off()
pdf("plots/high_leverag_outliers.pdf")
ols_plot_resid_lev(lmNetflix_log_2)
dev.off()
pdf("plots/Cooks_D.pdf")
cooksd <- cooks.distance(lmNetflix_log_2)
# Plot the Cook's Distance using the traditional 4/n criterion
sample_size <- nrow(netflix_data_complete)
plot(cooksd, pch=".", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4/sample_size, col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4/sample_size, names(cooksd),""), col="red")
dev.off()
badCd <- findBiggest(cooksd, 25)
badCd
pdf("plots/DFFITS.pdf")
ols_plot_dffits(lmNetflix_log_2)
dev.off()
model_clean <- update(lmNetflix_log_2, data = netflix_data_complete[-c(72, 269, 285), ])
summary(model_clean)
model_clean <- update(lmNetflix_log_2, data = netflix_data_complete[-c(badCd), ])
summary(model_clean)
netflix_data_complete <- netflix_data_complete[-c(72, 269, 285), ]
pdf("plots/cooksd2.pdf")
cooksd <- cooks.distance(lmNetflix_log_2)
# Plot the Cook's Distance using the traditional 4/n criterion
sample_size <- nrow(netflix_data_complete)
plot(cooksd, pch=".", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>0.04, names(cooksd),""), col="red")
dev.off()
write.csv(netflix_data_complete, "C:/Users/Systeembeheer/OneDrive - Tilburg University/Documenten/Master/Marketing Analytics/Thesis/ThesisRob/ThesisRob/Datasets/Cleaned_data/RegressionData.csv")
regressionData <- read.csv("C:/Users/Systeembeheer/OneDrive - Tilburg University/Documenten/Master/Marketing Analytics/Thesis/ThesisRob/ThesisRob/Datasets/Cleaned_data/RegressionData.csv")
#remove column "X"
regressionData <- regressionData %>%
select(!X)
summary(regressionData)
model1 <- lm(log(cumulative_rank) ~
AVG_Nmpaa_comp*Holiday_distance +
AVG_Ngenre_comp*Holiday_distance,
data = regressionData)
summary(model1)
model2 <- lm(log(cumulative_rank) ~
AVG_Nmpaa_comp * Holiday_distance+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel,
data = regressionData)
summary(model2)
model3 <- lm(log(cumulative_rank) ~
AVG_Nmpaa_comp * Holiday_distance+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
summary(model3)
model3 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp * Holiday_distance)+
log(AVG_Ngenre_comp * Holiday_distance)+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
model3 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp * Holiday_distance)+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
model3 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp) * log(Holiday_distance)+
log(AVG_Ngenre_comp) * log(Holiday_distance)+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
regressionData$log_AVG_Nmpaa_comp <- log(regressionData$AVG_Nmpaa_comp)
regressionData$log_Holiday_distance <- log(regressionData$Holiday_distance)
regressionData$log_AVG_Nmpaa_comp_Holiday_distance <- regressionData$log_AVG_Nmpaa_comp * regressionData$log_Holiday_distance
model3 <- lm(log(cumulative_rank) ~ log_AVG_Nmpaa_comp * log_Holiday_distance +
log_AVG_Ngenre_comp * log_Holiday_distance + rating +
exclusive + Type + sequel + Drama + Comedy + Suspense +
Family + Action + Sci.Fi + Romance + Other +
mpaa_R_Restricted + mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested + mpaa_NC17_Adults_only +
mpaa_Not_Rated, data = regressionData)
View(regressionData)
regressionData$log_AVG_Nmpaa_comp <- log(regressionData$AVG_Nmpaa_comp)
regressionData$log_Holiday_distance <- log(regressionData$Holiday_distance)
regressionData$log_AVG_Nmpaa_comp_Holiday_distance <- regressionData$log_AVG_Nmpaa_comp * regressionData$log_Holiday_distance
model3 <- lm(log(cumulative_rank) ~ log_AVG_Nmpaa_comp * log_Holiday_distance + rating +
exclusive + Type + sequel + Drama + Comedy + Suspense +
Family + Action + Sci.Fi + Romance + Other +
mpaa_R_Restricted + mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested + mpaa_NC17_Adults_only +
mpaa_Not_Rated, data = regressionData)
model3 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp) * log(Holiday_distance)+
log(AVG_Ngenre_comp) * log(Holiday_distance)+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
model3 <- lm(log(cumulative_rank) ~
AVG_Nmpaa_comp * Holiday_distance+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
summary(model3)
model3 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp) * log(Holiday_distance)+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
model3 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp)*log(Holiday_distance)+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
model1 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp)*Holiday_distance +
AVG_Ngenre_comp*Holiday_distance,
data = regressionData)
summary(model1)
model1 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp)*log(Holiday_distance) +
AVG_Ngenre_comp*Holiday_distance,
data = regressionData)
model1 <- lm(log(cumulative_rank) ~
AVG_Nmpaa_comp*Holiday_distance +
AVG_Ngenre_comp*Holiday_distance,
data = regressionData)
summary(model1)
model3 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp) * Holiday_distance+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
summary(model3)
model3 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp) * Holiday_distance+
log(AVG_Ngenre_comp) * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
model3 <- lm(log(cumulative_rank) ~
AVG_Nmpaa_comp * Holiday_distance+
log(AVG_Ngenre_comp) * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
model3 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp) * log(Holiday_distance)+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
model3 <- lm(log(cumulative_rank) ~
log(AVG_Nmpaa_comp) * Holiday_distance+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
summary(model3)
model3 <- lm(log(cumulative_rank) ~
AVG_Nmpaa_comp * Holiday_distance+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
summary(model3)
model3 <- lm(log(cumulative_rank) ~
AVG_Nmpaa_comp * log(Holiday_distance)+
AVG_Ngenre_comp * Holiday_distance+
rating +
exclusive +
Type +
sequel+
Drama+
Comedy+
Suspense+
Family+
Action+
Sci.Fi+
Romance+
Other+
mpaa_R_Restricted +
mpaa_G_General_audiences +
mpaa_PG_Parental_guidance_suggested +
mpaa_NC17_Adults_only+
mpaa_Not_Rated,
data = regressionData)
